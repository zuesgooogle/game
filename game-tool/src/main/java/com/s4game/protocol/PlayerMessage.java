// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/message-player.proto

package com.s4game.protocol;

@SuppressWarnings({"cast", "unused"})
public final class PlayerMessage {
  private PlayerMessage() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CgPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:CgPlayerInfo)
      com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code CgPlayerInfo}
   *
   * <pre>
   * &#64;Id(1000)
   * </pre>
   */
  public static final class CgPlayerInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:CgPlayerInfo)
      CgPlayerInfoOrBuilder {
    // Use CgPlayerInfo.newBuilder() to construct.
    private CgPlayerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CgPlayerInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CgPlayerInfo defaultInstance;
    public static CgPlayerInfo getDefaultInstance() {
      return defaultInstance;
    }

    public CgPlayerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CgPlayerInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.s4game.protocol.PlayerMessage.internal_static_CgPlayerInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.s4game.protocol.PlayerMessage.internal_static_CgPlayerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.s4game.protocol.PlayerMessage.CgPlayerInfo.class, com.s4game.protocol.PlayerMessage.CgPlayerInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<CgPlayerInfo> PARSER =
        new com.google.protobuf.AbstractParser<CgPlayerInfo>() {
      public CgPlayerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CgPlayerInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CgPlayerInfo> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.s4game.protocol.PlayerMessage.CgPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.s4game.protocol.PlayerMessage.CgPlayerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code CgPlayerInfo}
     *
     * <pre>
     * &#64;Id(1000)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:CgPlayerInfo)
        com.s4game.protocol.PlayerMessage.CgPlayerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.s4game.protocol.PlayerMessage.internal_static_CgPlayerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.s4game.protocol.PlayerMessage.internal_static_CgPlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.s4game.protocol.PlayerMessage.CgPlayerInfo.class, com.s4game.protocol.PlayerMessage.CgPlayerInfo.Builder.class);
      }

      // Construct using com.s4game.protocol.PlayerMessage.CgPlayerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.s4game.protocol.PlayerMessage.internal_static_CgPlayerInfo_descriptor;
      }

      public com.s4game.protocol.PlayerMessage.CgPlayerInfo getDefaultInstanceForType() {
        return com.s4game.protocol.PlayerMessage.CgPlayerInfo.getDefaultInstance();
      }

      public com.s4game.protocol.PlayerMessage.CgPlayerInfo build() {
        com.s4game.protocol.PlayerMessage.CgPlayerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.s4game.protocol.PlayerMessage.CgPlayerInfo buildPartial() {
        com.s4game.protocol.PlayerMessage.CgPlayerInfo result = new com.s4game.protocol.PlayerMessage.CgPlayerInfo(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.s4game.protocol.PlayerMessage.CgPlayerInfo) {
          return mergeFrom((com.s4game.protocol.PlayerMessage.CgPlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.s4game.protocol.PlayerMessage.CgPlayerInfo other) {
        if (other == com.s4game.protocol.PlayerMessage.CgPlayerInfo.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.s4game.protocol.PlayerMessage.CgPlayerInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.s4game.protocol.PlayerMessage.CgPlayerInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:CgPlayerInfo)
    }

    static {
      defaultInstance = new CgPlayerInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:CgPlayerInfo)
  }

  public interface GcPlayerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:GcPlayerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .PPlayerInfo playerInfo = 1;</code>
     */
    boolean hasPlayerInfo();
    /**
     * <code>required .PPlayerInfo playerInfo = 1;</code>
     */
    com.s4game.protocol.Structure.PPlayerInfo getPlayerInfo();
    /**
     * <code>required .PPlayerInfo playerInfo = 1;</code>
     */
    com.s4game.protocol.Structure.PPlayerInfoOrBuilder getPlayerInfoOrBuilder();
  }
  /**
   * Protobuf type {@code GcPlayerInfo}
   *
   * <pre>
   * &#64;Id(1001)
   * </pre>
   */
  public static final class GcPlayerInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:GcPlayerInfo)
      GcPlayerInfoOrBuilder {
    // Use GcPlayerInfo.newBuilder() to construct.
    private GcPlayerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GcPlayerInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GcPlayerInfo defaultInstance;
    public static GcPlayerInfo getDefaultInstance() {
      return defaultInstance;
    }

    public GcPlayerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GcPlayerInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.s4game.protocol.Structure.PPlayerInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = playerInfo_.toBuilder();
              }
              playerInfo_ = input.readMessage(com.s4game.protocol.Structure.PPlayerInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(playerInfo_);
                playerInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.s4game.protocol.PlayerMessage.internal_static_GcPlayerInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.s4game.protocol.PlayerMessage.internal_static_GcPlayerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.s4game.protocol.PlayerMessage.GcPlayerInfo.class, com.s4game.protocol.PlayerMessage.GcPlayerInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<GcPlayerInfo> PARSER =
        new com.google.protobuf.AbstractParser<GcPlayerInfo>() {
      public GcPlayerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GcPlayerInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GcPlayerInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PLAYERINFO_FIELD_NUMBER = 1;
    private com.s4game.protocol.Structure.PPlayerInfo playerInfo_;
    /**
     * <code>required .PPlayerInfo playerInfo = 1;</code>
     */
    public boolean hasPlayerInfo() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .PPlayerInfo playerInfo = 1;</code>
     */
    public com.s4game.protocol.Structure.PPlayerInfo getPlayerInfo() {
      return playerInfo_;
    }
    /**
     * <code>required .PPlayerInfo playerInfo = 1;</code>
     */
    public com.s4game.protocol.Structure.PPlayerInfoOrBuilder getPlayerInfoOrBuilder() {
      return playerInfo_;
    }

    private void initFields() {
      playerInfo_ = com.s4game.protocol.Structure.PPlayerInfo.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasPlayerInfo()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlayerInfo().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, playerInfo_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, playerInfo_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.s4game.protocol.PlayerMessage.GcPlayerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.s4game.protocol.PlayerMessage.GcPlayerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code GcPlayerInfo}
     *
     * <pre>
     * &#64;Id(1001)
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:GcPlayerInfo)
        com.s4game.protocol.PlayerMessage.GcPlayerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.s4game.protocol.PlayerMessage.internal_static_GcPlayerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.s4game.protocol.PlayerMessage.internal_static_GcPlayerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.s4game.protocol.PlayerMessage.GcPlayerInfo.class, com.s4game.protocol.PlayerMessage.GcPlayerInfo.Builder.class);
      }

      // Construct using com.s4game.protocol.PlayerMessage.GcPlayerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerInfoBuilder_ == null) {
          playerInfo_ = com.s4game.protocol.Structure.PPlayerInfo.getDefaultInstance();
        } else {
          playerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.s4game.protocol.PlayerMessage.internal_static_GcPlayerInfo_descriptor;
      }

      public com.s4game.protocol.PlayerMessage.GcPlayerInfo getDefaultInstanceForType() {
        return com.s4game.protocol.PlayerMessage.GcPlayerInfo.getDefaultInstance();
      }

      public com.s4game.protocol.PlayerMessage.GcPlayerInfo build() {
        com.s4game.protocol.PlayerMessage.GcPlayerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.s4game.protocol.PlayerMessage.GcPlayerInfo buildPartial() {
        com.s4game.protocol.PlayerMessage.GcPlayerInfo result = new com.s4game.protocol.PlayerMessage.GcPlayerInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerInfoBuilder_ == null) {
          result.playerInfo_ = playerInfo_;
        } else {
          result.playerInfo_ = playerInfoBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.s4game.protocol.PlayerMessage.GcPlayerInfo) {
          return mergeFrom((com.s4game.protocol.PlayerMessage.GcPlayerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.s4game.protocol.PlayerMessage.GcPlayerInfo other) {
        if (other == com.s4game.protocol.PlayerMessage.GcPlayerInfo.getDefaultInstance()) return this;
        if (other.hasPlayerInfo()) {
          mergePlayerInfo(other.getPlayerInfo());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayerInfo()) {
          
          return false;
        }
        if (!getPlayerInfo().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.s4game.protocol.PlayerMessage.GcPlayerInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.s4game.protocol.PlayerMessage.GcPlayerInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.s4game.protocol.Structure.PPlayerInfo playerInfo_ = com.s4game.protocol.Structure.PPlayerInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.s4game.protocol.Structure.PPlayerInfo, com.s4game.protocol.Structure.PPlayerInfo.Builder, com.s4game.protocol.Structure.PPlayerInfoOrBuilder> playerInfoBuilder_;
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      public boolean hasPlayerInfo() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      public com.s4game.protocol.Structure.PPlayerInfo getPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          return playerInfo_;
        } else {
          return playerInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      public Builder setPlayerInfo(com.s4game.protocol.Structure.PPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          playerInfo_ = value;
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      public Builder setPlayerInfo(
          com.s4game.protocol.Structure.PPlayerInfo.Builder builderForValue) {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = builderForValue.build();
          onChanged();
        } else {
          playerInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      public Builder mergePlayerInfo(com.s4game.protocol.Structure.PPlayerInfo value) {
        if (playerInfoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              playerInfo_ != com.s4game.protocol.Structure.PPlayerInfo.getDefaultInstance()) {
            playerInfo_ =
              com.s4game.protocol.Structure.PPlayerInfo.newBuilder(playerInfo_).mergeFrom(value).buildPartial();
          } else {
            playerInfo_ = value;
          }
          onChanged();
        } else {
          playerInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      public Builder clearPlayerInfo() {
        if (playerInfoBuilder_ == null) {
          playerInfo_ = com.s4game.protocol.Structure.PPlayerInfo.getDefaultInstance();
          onChanged();
        } else {
          playerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      public com.s4game.protocol.Structure.PPlayerInfo.Builder getPlayerInfoBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      public com.s4game.protocol.Structure.PPlayerInfoOrBuilder getPlayerInfoOrBuilder() {
        if (playerInfoBuilder_ != null) {
          return playerInfoBuilder_.getMessageOrBuilder();
        } else {
          return playerInfo_;
        }
      }
      /**
       * <code>required .PPlayerInfo playerInfo = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.s4game.protocol.Structure.PPlayerInfo, com.s4game.protocol.Structure.PPlayerInfo.Builder, com.s4game.protocol.Structure.PPlayerInfoOrBuilder> 
          getPlayerInfoFieldBuilder() {
        if (playerInfoBuilder_ == null) {
          playerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.s4game.protocol.Structure.PPlayerInfo, com.s4game.protocol.Structure.PPlayerInfo.Builder, com.s4game.protocol.Structure.PPlayerInfoOrBuilder>(
                  getPlayerInfo(),
                  getParentForChildren(),
                  isClean());
          playerInfo_ = null;
        }
        return playerInfoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:GcPlayerInfo)
    }

    static {
      defaultInstance = new GcPlayerInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:GcPlayerInfo)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_CgPlayerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_CgPlayerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_GcPlayerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_GcPlayerInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032proto/message-player.proto\032\020proto/enum" +
      ".proto\032\025proto/structure.proto\"\016\n\014CgPlaye" +
      "rInfo\"0\n\014GcPlayerInfo\022 \n\nplayerInfo\030\001 \002(" +
      "\0132\014.PPlayerInfoB$\n\023com.s4game.protocolB\r" +
      "PlayerMessage"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.s4game.protocol.Enum.getDescriptor(),
          com.s4game.protocol.Structure.getDescriptor(),
        }, assigner);
    internal_static_CgPlayerInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_CgPlayerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_CgPlayerInfo_descriptor,
        new java.lang.String[] { });
    internal_static_GcPlayerInfo_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_GcPlayerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_GcPlayerInfo_descriptor,
        new java.lang.String[] { "PlayerInfo", });
    com.s4game.protocol.Enum.getDescriptor();
    com.s4game.protocol.Structure.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
